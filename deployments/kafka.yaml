apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: messaging
  labels:
    app: kafka
    component: broker
spec:
  serviceName: kafka
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
        component: broker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "7071"
    spec:
      serviceAccountName: kafka
      terminationGracePeriodSeconds: 300
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.0.1
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 7071
          name: jmx
        env:
        - name: KAFKA_BROKER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper.messaging.svc.cluster.local:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://$(POD_NAME).kafka.messaging.svc.cluster.local:9092,PLAINTEXT_INTERNAL://$(POD_IP):29092"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT_INTERNAL"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_LOG_DIRS
          value: "/var/lib/kafka/data"
        - name: KAFKA_HEAP_OPTS
          value: "-Xmx4G -Xms4G"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 2
            memory: 6Gi
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/kafka/data
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "/usr/bin/jps | /bin/grep -q SupportedKafka"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - kafka-broker-api-versions
            - --bootstrap-server
            - localhost:9092
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: kafka-datadir
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "fast-ssd"
      resources:
        requests:
          storage: 50Gi
---
# Service for internal cluster communication
apiVersion: v1
kind: Service
metadata:
  name: kafka-internal
  namespace: messaging
  labels:
    app: kafka
spec:
  clusterIP: None
  ports:
  - port: 29092
    name: kafka-internal
  selector:
    app: kafka
---
# Service for external clients
apiVersion: v1
kind: Service
metadata:
  name: kafka-external
  namespace: messaging
  labels:
    app: kafka
spec:
  type: LoadBalancer
  ports:
  - port: 9092
    targetPort: 9092
    name: kafka-external
  selector:
    app: kafka
---
# Monitoring sidecar
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-monitoring
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-monitoring
  template:
    metadata:
      labels:
        app: kafka-monitoring
    spec:
      containers:
      - name: kafka-exporter
        image: danielqsj/kafka-exporter:v1.4.0
        args:
        - --kafka.server=kafka.messaging.svc.cluster.local:9092
        - --web.listen-address=:9308
        - --sasl.enabled=false
        ports:
        - containerPort: 9308
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
---
# ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kafka-monitor
  namespace: monitoring
  labels:
    release: prometheus-operator
spec:
  selector:
    matchLabels:
      app: kafka-monitoring
  endpoints:
  - port: kafka-exporter
    interval: 15s
    scrapeTimeout: 10s