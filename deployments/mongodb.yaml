apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: messaging
  labels:
    app: mongodb
    component: mongodb-replicaset
spec:
  serviceName: mongodb
  replicas: 3
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
        component: mongodb-replicaset
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9216"
    spec:
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "app"
                operator: In
                values: ["mongodb"]
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: mongodb
        image: mongo:5.0
        command:
        - mongod
        - "--bind_ip_all"
        - "--replSet"
        - rs0
        - "--wiredTigerCacheSizeGB"
        - "2"
        ports:
        - containerPort: 27017
          name: mongodb
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: root-password
        volumeMounts:
        - name: datadir
          mountPath: /data/db
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
      - name: mongodb-exporter
        image: percona/mongodb_exporter:0.35
        ports:
        - containerPort: 9216
          name: metrics
        args:
        - --mongodb.uri=mongodb://$(MONGO_INITDB_ROOT_USERNAME):$(MONGO_INITDB_ROOT_PASSWORD)@localhost:27017/admin?ssl=false
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "fast-ssd"
      resources:
        requests:
          storage: 100Gi
---
# Headless Service for DNS SRV records
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: messaging
  labels:
    app: mongodb
spec:
  clusterIP: None
  ports:
  - port: 27017
    name: mongodb
  selector:
    app: mongodb
---
# Client Service
apiVersion: v1
kind: Service
metadata:
  name: mongodb-client
  namespace: messaging
  labels:
    app: mongodb
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
    name: mongodb
  selector:
    app: mongodb
---
# Secrets (should be created separately)
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secrets
  namespace: messaging
type: Opaque
data:
  root-username: YWRtaW4=  
  root-password: cGFzc3dvcmQxMjM=  
---
# ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: mongodb-monitor
  namespace: monitoring
  labels:
    release: prometheus-operator
spec:
  selector:
    matchLabels:
      app: mongodb
  endpoints:
  - port: metrics
    interval: 15s
    scrapeTimeout: 10s
    path: /metrics